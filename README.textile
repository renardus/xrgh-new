h1. Xrgh New

This application was generated for training purposes with the "rails_apps_composer":https://github.com/RailsApps/rails_apps_composer gem provided by the "RailsApps Project":http://railsapps.github.io/.

h2. Training Purposes

First objective is to see how a model of a tree can be represented in Rails. Therefore a Category model will be implemented with the gem ancestry to give it the tree attributes. The big challenge is to make a good view.

Second objective is to give each category items. That is the normal has_many and belongs_to relationships.

Third objective is to give a category features. That is the same as the items relationship but has a twist. The features of the ancestor categories are added to the feature list of a category. So probably a read-only _feature_list_ attribute must be added to the attributes of category.

The fourth objective is to give an item properties. Which properties an item has is determined by the feature_list of its category. 

The fifth objective is to find each property as a feature. So something like item.property[:color] should be possible.

h2. Naming Conventions

There are categories which form a forest. Each category has items. Each item has many properties. Which item properties there are is dependend on the category.

The name of the category properties is still difficult because a property will have to refer to it and then the most natural denotation is type. But a category cannot have many types. Facet is a possibility. For now I have settled on _feature_.

h2. Diagnostics

This application was built with recipes that are known to work together.

This application was built with preferences that are NOT known to work together.

If the application doesn't work as expected, please "report an issue":https://github.com/RailsApps/rails_apps_composer/issues and include these diagnostics:

We'd also like to know if you've found combinations of recipes or preferences that do work together.

Recipes:
["apps4", "controllers", "core", "email", "extras", "frontend", "gems", "git", "init", "models", "prelaunch", "railsapps", "readme", "routes", "saas", "setup", "testing", "views"]

Preferences:
{:git=>true, :apps4=>"none", :dev_webserver=>"thin", :prod_webserver=>"thin", :database=>"sqlite", :templates=>"erb", :unit_test=>"rspec", :integration=>"none", :continuous_testing=>"none", :fixtures=>"none", :frontend=>"foundation5", :email=>"none", :authentication=>"devise", :devise_modules=>"default", :authorization=>"cancan", :form_builder=>"simple_form", :starter_app=>"admin_app", :rvmrc=>false, :quiet_assets=>true, :local_env_file=>true, :better_errors=>true, :ban_spiders=>true, :github=>true}

h2. Ruby on Rails

This application requires:

* Ruby version 2.0.0
* Rails version 4.0.2

Learn more about "Installing Rails":http://railsapps.github.io/installing-rails.html.

h2. Database

This application uses SQLite with ActiveRecord.

h2. Development

* Template Engine: ERB
* Testing Framework: RSpec
* Front-end Framework: Zurb Foundation 5
* Form Builder: SimpleForm
* Authentication: Devise
* Authorization: CanCan





h2. Getting Started

Lorem ipsum dolor sit amet, consectetur adipiscing elit.

h2. Documentation and Support

This is the only documentation.

h4. Issues

Lorem ipsum dolor sit amet, consectetur adipiscing elit.

h2. Similar Projects

Lorem ipsum dolor sit amet, consectetur adipiscing elit.

h2. Contributing

If you make improvements to this application, please share with others.

* Fork the project on GitHub.
* Make your feature addition or bug fix.
* Commit with Git.
* Send the author a pull request.

If you add functionality to this application, create an alternative implementation, or build an application that is similar, please contact me and I'll add a note to the README so that others can find your work.

h2. Credits

Lorem ipsum dolor sit amet, consectetur adipiscing elit.

h2. License

Lorem ipsum dolor sit amet, consectetur adipiscing elit.
